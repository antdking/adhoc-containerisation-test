
upstream app {
    server ${APP_HOST}:${APP_PORT};
}

server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    ssl_certificate ${SSL_APP_CERT_PATH};
    ssl_certificate_key ${SSL_APP_CERT_KEY_PATH};

    # generated 2024-06-02, Mozilla Guideline v5.7, nginx 1.27.0, OpenSSL 3.0.11, intermediate configuration, no OCSP
    # https://ssl-config.mozilla.org/#server=nginx&version=1.27.0&config=intermediate&openssl=3.0.11&ocsp=false&guideline=5.7
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    # NOTE: This is disabled so as to not break other localhost environments
    # add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
        proxy_pass http://app;
    }
}
